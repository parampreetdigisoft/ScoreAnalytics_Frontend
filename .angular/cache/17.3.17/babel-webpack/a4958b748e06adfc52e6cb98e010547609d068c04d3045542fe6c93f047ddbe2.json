{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  ngOnInit() {\n    // Redirect if already authenticated\n    if (this.authService.isAuthenticated()) {\n      this.redirectBasedOnRole();\n    }\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      this.authService.login(this.loginForm.value).subscribe({\n        next: response => {\n          this.isLoading = false;\n          this.redirectBasedOnRole();\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.message || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n  loginAsDemo(role) {\n    const demoCredentials = {\n      admin: {\n        email: 'admin@usvi.com',\n        password: 'password'\n      },\n      analyst: {\n        email: 'analyst@usvi.com',\n        password: 'password'\n      },\n      evaluator: {\n        email: 'evaluator@usvi.com',\n        password: 'password'\n      },\n      'city-user': {\n        email: 'cityuser@usvi.com',\n        password: 'password'\n      }\n    };\n    const credentials = demoCredentials[role];\n    this.loginForm.patchValue(credentials);\n    this.onSubmit();\n  }\n  redirectBasedOnRole() {\n    const role = this.authService.getUserRole();\n    switch (role) {\n      case 'admin':\n        this.router.navigate(['/admin']);\n        break;\n      case 'analyst':\n        this.router.navigate(['/analyst']);\n        break;\n      case 'evaluator':\n        this.router.navigate(['/evaluator']);\n        break;\n      case 'city-user':\n        this.router.navigate(['/city-user']);\n        break;\n      default:\n        this.router.navigate(['/home']);\n    }\n  }\n  isFieldInvalid(fieldName) {\n    const field = this.loginForm.get(fieldName);\n    return !!(field && field.invalid && (field.dirty || field.touched));\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  template: `\n    <div class=\"login-container\">\n      <div class=\"login-card\">\n        <h2>Login to USVI App</h2>\n        \n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input \n              type=\"email\" \n              id=\"email\" \n              formControlName=\"email\" \n              placeholder=\"Enter your email\"\n              class=\"form-control\"\n              [class.error]=\"isFieldInvalid('email')\"\n            />\n            <div class=\"error-message\" *ngIf=\"isFieldInvalid('email')\">\n              Please enter a valid email address\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input \n              type=\"password\" \n              id=\"password\" \n              formControlName=\"password\" \n              placeholder=\"Enter your password\"\n              class=\"form-control\"\n              [class.error]=\"isFieldInvalid('password')\"\n            />\n            <div class=\"error-message\" *ngIf=\"isFieldInvalid('password')\">\n              Password is required\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <button \n              type=\"submit\" \n              class=\"btn btn-primary\"\n              [disabled]=\"loginForm.invalid || isLoading\"\n            >\n              {{ isLoading ? 'Logging in...' : 'Login' }}\n            </button>\n          </div>\n\n          <div class=\"error-message\" *ngIf=\"errorMessage\">\n            {{ errorMessage }}\n          </div>\n        </form>\n\n        <div class=\"demo-accounts\">\n          <h4>Demo Accounts:</h4>\n          <div class=\"demo-account\" (click)=\"loginAsDemo('admin')\">\n            <strong>Admin:</strong> admin@usvi.com / password\n          </div>\n          <div class=\"demo-account\" (click)=\"loginAsDemo('analyst')\">\n            <strong>Analyst:</strong> analyst@usvi.com / password\n          </div>\n          <div class=\"demo-account\" (click)=\"loginAsDemo('evaluator')\">\n            <strong>Evaluator:</strong> evaluator@usvi.com / password\n          </div>\n          <div class=\"demo-account\" (click)=\"loginAsDemo('city-user')\">\n            <strong>City User:</strong> cityuser@usvi.com / password\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .login-container {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      min-height: 100vh;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    }\n\n    .login-card {\n      background: white;\n      padding: 2rem;\n      border-radius: 10px;\n      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\n      width: 100%;\n      max-width: 400px;\n    }\n\n    h2 {\n      text-align: center;\n      color: #333;\n      margin-bottom: 2rem;\n    }\n\n    .form-group {\n      margin-bottom: 1.5rem;\n    }\n\n    label {\n      display: block;\n      margin-bottom: 0.5rem;\n      color: #555;\n      font-weight: 500;\n    }\n\n    .form-control {\n      width: 100%;\n      padding: 0.75rem;\n      border: 2px solid #e1e5e9;\n      border-radius: 5px;\n      font-size: 1rem;\n      transition: border-color 0.3s ease;\n    }\n\n    .form-control:focus {\n      outline: none;\n      border-color: #667eea;\n    }\n\n    .form-control.error {\n      border-color: #e74c3c;\n    }\n\n    .btn {\n      width: 100%;\n      padding: 0.75rem;\n      border: none;\n      border-radius: 5px;\n      font-size: 1rem;\n      font-weight: 600;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n\n    .btn-primary {\n      background-color: #667eea;\n      color: white;\n    }\n\n    .btn-primary:hover:not(:disabled) {\n      background-color: #5a6fd8;\n    }\n\n    .btn-primary:disabled {\n      background-color: #bdc3c7;\n      cursor: not-allowed;\n    }\n\n    .error-message {\n      color: #e74c3c;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .demo-accounts {\n      margin-top: 2rem;\n      padding-top: 1rem;\n      border-top: 1px solid #e1e5e9;\n    }\n\n    .demo-accounts h4 {\n      margin-bottom: 1rem;\n      color: #666;\n      font-size: 0.9rem;\n    }\n\n    .demo-account {\n      padding: 0.5rem;\n      margin-bottom: 0.5rem;\n      background-color: #f8f9fa;\n      border-radius: 5px;\n      cursor: pointer;\n      font-size: 0.875rem;\n      transition: background-color 0.3s ease;\n    }\n\n    .demo-account:hover {\n      background-color: #e9ecef;\n    }\n  `]\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}